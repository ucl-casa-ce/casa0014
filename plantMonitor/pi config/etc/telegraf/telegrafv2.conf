# Telegraf Configuration

###############################################################################
#                Global settings - you don't need to edit these               #
###############################################################################

# Global tags can be specified here in key="value" format.
[global_tags]

# Configuration for telegraf agent
[agent]
  ## Default data collection interval for all inputs
  ## For the plant monitor demo you dont need to change any these settings
  interval = "10s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = ""
  debug = false
  quiet = false
  logfile = ""
  ## Override default hostname, if empty use os.Hostname()
  hostname = ""
  ## If set to true, do no set the "host" tag in the telegraf agent.
  omit_hostname = false



###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################


[[outputs.influxdb_v2]] 
  urls = ["http://127.0.0.1:8086"]
  ## Token for authentication.
  token = "CldQu-Uwi_lhDCG_bwHD9DT2viowQFDPZJz1WRBa_9sDJV8EzFU5LEQ22RVFGjNGhxM6P_jgGv-eXTjGwVhzGg=="
  ## Organization is the name of the organization you wish to write to; must exist.
  organization = "casa0014"
  ## Destination bucket to write into.
  bucket = "rasp-pi"



###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################

# Read metrics about cpu usage
[[inputs.cpu]]
  ## Whether to report per-cpu stats or not
  percpu = true
  ## Whether to report total system cpu stats or not
  totalcpu = true
  ## If true, collect raw CPU time metrics.
  collect_cpu_time = false
  ## If true, compute and report the sum of all non-idle CPU states.
  report_active = false

[[inputs.disk]]
  ## By default stats will be gathered for all mount points.
  ## Set mount_points will restrict the stats to only the specified mount points.
  # mount_points = ["/"]
  ## Ignore mount points by filesystem type.
  ignore_fs = ["tmpfs", "devtmpfs", "devfs", "overlay", "aufs", "squashfs"]
[[inputs.diskio]]
[[inputs.mem]]
[[inputs.net]]
[[inputs.processes]]
[[inputs.swap]]
[[inputs.system]]

[[inputs.exec]]
  commands = ["/usr/bin/vcgencmd measure_temp"]
  name_override = "temperature_gpu"
  data_format = "grok"
  grok_patterns = ["%{NUMBER:value:float}"]

[[inputs.temp]]


###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################


[[outputs.influxdb_v2]] 
  urls = ["http://127.0.0.1:8086"]
  ## Token for authentication.
  token = "CldQu-Uwi_lhDCG_bwHD9DT2viowQFDPZJz1WRBa_9sDJV8EzFU5LEQ22RVFGjNGhxM6P_jgGv-eXTjGwVhzGg=="
  ## Organization is the name of the organization you wish to write to; must exist.
  organization = "casa0014"
  ## Destination bucket to write into.
  bucket = "mqtt-data"



###############################################################################
#                            SERVICE INPUT PLUGINS                            #
###############################################################################

# Read metrics from MQTT topic(s)
[[inputs.mqtt_consumer]]
  ## MQTT broker URLs to be used. The format should be scheme://host:port,
  servers = ["tcp://mqtt.cetools.org:1884"]
  client_id = "telegraf_casa0014_ucjtdjw"

  ## Username and password to connect MQTT server.
  username = "student"
  #password = "enter password for your mqtt account"  
  password = "ce2021-mqtt-forget-whale"  




  ## Topics that will be subscribed to.
  topics = [
    "student/CASA0014/plant/ucjtdjw/#"
    ]
  topic_tag = "plant-topics"
  data_format = "value"
  data_type = "float"
  
# -----   Weather Stations -----------------------------------
[[inputs.mqtt_consumer]]
   servers = ["tcp://mqtt.cetools.org:1883"]

  ## Topics that will be subscribed to.
  topics = [
    "UCL/90TCR/106/WST/celab_davis_vue/loop",
    "UCL/PSW/Garden/WST/dvp2/loop"
  ]
  
  client_id = "ce-mqtt-telegraf-weather"
  topic_tag = "weather-topics"
  data_format = "json"
  json_string_fields = ["altimeter_mbar","appTemp_C","barometer_mbar","cloudbase_meter","consBatteryVoltage_volt","dateTime","dayET","dayRain_cm","dewpoint_C","extraAlarm1","extraAlarm2","extraAlarm3","extraAlarm4","extraAlarm5","extraAlarm6","extraAlarm7","extraAlarm8","forecastIcon","forecastRule","heatindex_C","hourRain_cm","humidex_C","inDewpoint_C","inHumidity","insideAlarm","inTemp_C","leafWet4","maxSolarRad_Wpm2","monthET","monthRain_cm","outHumidity","outsideAlarm1","outsideAlarm2","outTemp_C","pressure_mbar","radiation_Wpm2","rain_cm","rain24_cm","rainAlarm","rainRate_cm_per_hour","soilLeafAlarm1","soilLeafAlarm2","soilLeafAlarm3","soilLeafAlarm4","stormRain_cm","sunrise","sunset","txBatteryStatus","usUnits","UV","windchill_C","windDir","windGust_kph","windGustDir","windSpeed_kph","windSpeed10_kph","yearET","yearRain_cm"]
